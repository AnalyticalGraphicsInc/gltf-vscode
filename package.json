{
    "name": "gltf-vscode",
    "displayName": "glTF Tools",
    "description": "Tools for editing and previewing glTF files",
    "version": "2.0.5",
    "publisher": "cesium",
    "license": "Apache-2.0",
    "repository": {
        "url": "https://github.com/AnalyticalGraphicsInc/gltf-vscode"
    },
    "icon": "images/gltf.png",
    "engines": {
        "vscode": "^1.10.0"
    },
    "categories": [
        "Formatters",
        "Linters"
    ],
    "activationEvents": [
        "onCommand:gltf.inspectDataUri",
        "onCommand:gltf.importUri",
        "onCommand:gltf.exportUri",
        "onCommand:gltf.previewModel"
    ],
    "main": "./out/src/extension",
    "contributes": {
        "configuration": {
            "title": "glTF configuration",
            "properties": {
                "glTF.defaultV1Engine": {
                    "type": "string",
                    "default": "Cesium",
                    "enum": [
                        "Babylon.js",
                        "Cesium",
                        "Three.js"
                    ],
                    "description": "The default 3D engine that will be used when previewing a glTF 1.0 model.  You can always change the current engine within the preview pane."
                },
                "glTF.defaultV2Engine": {
                    "type": "string",
                    "default": "Babylon.js",
                    "enum": [
                        "Babylon.js",
                        "Cesium",
                        "Three.js"
                    ],
                    "description": "The default 3D engine that will be used when previewing a glTF 2.0 model.  You can always change the current engine within the preview pane."
                },
                "glTF.Babylon.environment": {
                    "type": "string",
                    "default": "{extensionRootPath}/environments/babylon/countrySpecularHDR.dds",
                    "description": "The path to a BabylonJS-ready DDS environment file.  See: http://doc.babylonjs.com/overviews/physically_based_rendering#creating-a-dds-environment-file-from-an-hdr-image"
                },
                "glTF.Three.environment": {
                    "type": "string",
                    "default": "{extensionRootPath}/environments/threejs/Park2/{face}.jpg",
                    "description": "The path to a set of environment cube faces usable by ThreeJS.  Use {face} for the face name, and six files must exist with the following face names: posx, negx, posy, negy, posz, and negz."
                }
            }
        },
        "commands": [
            {
                "command": "gltf.inspectDataUri",
                "title": "glTF: Inspect Data URI"
            },
            {
                "command": "gltf.importUri",
                "title": "glTF: Import file as Data URI"
            },
            {
                "command": "gltf.exportUri",
                "title": "glTF: Export a Data URI to a file"
            },
            {
                "command": "gltf.previewModel",
                "title": "glTF: Preview 3D Model"
            }
        ],
        "keybindings": [
            {
                "command": "gltf.inspectDataUri",
                "key": "alt+d",
                "mac": "alt+d",
                "when": "editorTextFocus && editorLangId == 'json'"
            },
            {
                "command": "gltf.previewModel",
                "key": "alt+g",
                "mac": "alt+g",
                "when": "editorTextFocus && editorLangId == 'json'"
            }
        ],
        "languages": [
            {
                "id": "json",
                "extensions": [
                    ".gltf"
                ]
            }
        ],
        "jsonValidation": [
            {
                "fileMatch": "*.gltf",
                "url": "./schemas/glTF.chooser.schema.json"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "tsc -p ./",
        "compile": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "node ./node_modules/vscode/bin/test"
    },
    "devDependencies": {
        "jshint": "^2.9.4",
        "yargs": "^6.5.0",
        "typescript": "^2.0.3",
        "vscode": "^1.0.0",
        "mocha": "^2.3.3",
        "@types/node": "^6.0.40",
        "@types/mocha": "^2.2.32"
    },
    "dependencies": {
        "json-source-map": "^0.4.0"
    }
}
