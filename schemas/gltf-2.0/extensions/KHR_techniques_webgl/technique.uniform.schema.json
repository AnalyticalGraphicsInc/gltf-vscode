{
    "$schema" : "http://json-schema.org/draft-04/schema",
    "title" : "Uniform",
    "type" : "object",
    "description" : "A uniform input to a technique, and an optional semantic and value.",
    "allOf" : [
        {
            "$ref" : "../../glTFProperty.schema.json"
        }
    ],
    "properties" : {
        "count" : {
            "type" : "integer",
            "description" : "When defined, the uniform is an array of `count` elements of the specified type.  Otherwise, the uniform is not an array.  When defined, `value`'s length must equal `count`, times the number of components in the `type`, e.g., `3` for `FLOAT_VEC3`.  A uniform array of scalar values is not the same as a uniform vector of the same size; for example, when count is 2 and type is `5126` (`FLOAT`), the uniform is an array of two floating-point values, not a `FLOAT_VEC2`. When a glTF-defined semantic is used, the semantic must be `JOINTMATRIX`; application-specific uniforms can be arrays and, therefore, define `count`.",
            "minimum" : 1,
            "short_description" : "When defined, the uniform is an array of count elements of the specified type.  Otherwise, the uniform is not an array."
        },
        "node" : {
            "allOf" : [
                {
                    "$ref" : "../../glTFid.schema.json"
                }
            ],
            "description" : "The index of the node whose transform is used as the uniform's value.  When this is defined, `type` must be `35676` (`FLOAT_MAT4`), therefore, when the semantic is `\"MODELINVERSETRANSPOSE\"`, `\"MODELVIEWINVERSETRANSPOSE\"`, or `\"VIEWPORT\"`, the node property can't be defined.",
            "short_description" : "The index of the node whose transform is used as the uniform's value."
        },
        "type" : {
            "description" : "The uniform type.  All valid values correspond to WebGL enums.",
            "oneOf" : [
                {
                    "enum" : [
                        5124
                    ],
                    "description" : "INT - The uniform type."
                },
                {
                    "enum" : [
                        5126
                    ],
                    "description" : "FLOAT - The uniform type."
                },
                {
                    "enum" : [
                        35664
                    ],
                    "description" : "FLOAT_VEC2 - The uniform type."
                },
                {
                    "enum" : [
                        35665
                    ],
                    "description" : "FLOAT_VEC3 - The uniform type."
                },
                {
                    "enum" : [
                        35666
                    ],
                    "description" : "FLOAT_VEC4 - The uniform type."
                },
                {
                    "enum" : [
                        35667
                    ],
                    "description" : "INT_VEC2 - The uniform type."
                },
                {
                    "enum" : [
                        35668
                    ],
                    "description" : "INT_VEC3 - The uniform type."
                },
                {
                    "enum" : [
                        35669
                    ],
                    "description" : "INT_VEC4 - The uniform type."
                },
                {
                    "enum" : [
                        35670
                    ],
                    "description" : "BOOL - The uniform type."
                },
                {
                    "enum" : [
                        35671
                    ],
                    "description" : "BOOL_VEC2 - The uniform type."
                },
                {
                    "enum" : [
                        35672
                    ],
                    "description" : "BOOL_VEC3 - The uniform type."
                },
                {
                    "enum" : [
                        35673
                    ],
                    "description" : "BOOL_VEC4 - The uniform type."
                },
                {
                    "enum" : [
                        35674
                    ],
                    "description" : "FLOAT_MAT2 - The uniform type."
                },
                {
                    "enum" : [
                        35675
                    ],
                    "description" : "FLOAT_MAT3 - The uniform type."
                },
                {
                    "enum" : [
                        35676
                    ],
                    "description" : "FLOAT_MAT4 - The uniform type."
                },
                {
                    "enum" : [
                        35678
                    ],
                    "description" : "SAMPLER_2D - The uniform type."
                }
            ],
            "short_description" : "The uniform type."
        },
        "semantic" : {
            "type" : "string",
            "description" : "Identifies a uniform with a well-known meaning.  Uniform semantics include `\"LOCAL\"` (FLOAT_MAT4), `\"MODEL\"` (FLOAT_MAT4), `\"VIEW\"` (FLOAT_MAT4), `\"PROJECTION\"` (FLOAT_MAT4), `\"MODELVIEW\"` (FLOAT_MAT4), `\"MODELVIEWPROJECTION\"` (FLOAT_MAT4), `\"MODELINVERSE\"` (FLOAT_MAT4), `\"VIEWINVERSE\"` (FLOAT_MAT4), `\"PROJECTIONINVERSE\"` (FLOAT_MAT4), `\"MODELVIEWINVERSE\"` (FLOAT_MAT4), `\"MODELVIEWPROJECTIONINVERSE\"` (FLOAT_MAT4), `\"MODELINVERSETRANSPOSE\"` (FLOAT_MAT3), `\"MODELVIEWINVERSETRANSPOSE\"` (FLOAT_MAT3), `\"VIEWPORT\"` (FLOAT_VEC4), `\"JOINTMATRIX\"` (FLOAT_MAT4[]).  For forward-compatibility, application-specific semantics must start with an underscore, e.g., `\"_SIMULATION_TIME\"`.",
            "short_description" : "Identifies a uniform with a well-known meaning."
        },
        "value" : {
            "allOf" : [
                {
                    "$ref" : "uniform.value.schema.json"
                }
            ],
            "description" : "The value of the uniform. The length is determined by the values of the `type` and `count` (if present) properties.  A material uniform value with the same name, when specified, overrides this value.",
            "short_description" : "The value of the uniform."
        },
        "extensions" : {},
        "extras" : {}
    },
    "required" : [
        "type"
    ]
}
