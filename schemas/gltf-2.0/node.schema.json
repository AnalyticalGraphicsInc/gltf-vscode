{
    "$schema" : "http://json-schema.org/draft-04/schema",
    "title" : "Node",
    "type" : "object",
    "description" : "A node in the node hierarchy.  When the node contains `skin`, all `mesh.primitives` must contain `JOINTS_0` and `WEIGHTS_0` attributes.  A node can have either a `matrix` or any combination of `translation`/`rotation`/`scale` (TRS) properties. TRS properties are converted to matrices and postmultiplied in the `T * R * S` order to compose the transformation matrix; first the scale is applied to the vertices, then the rotation, and then the translation. If none are provided, the transform is the identity. When a node is targeted for animation (referenced by an animation.channel.target), only TRS properties may be present; `matrix` will not be present.",
    "allOf" : [
        {
            "$ref" : "glTFChildOfRootProperty.schema.json"
        }
    ],
    "properties" : {
        "camera" : {
            "allOf" : [
                {
                    "$ref" : "glTFid.schema.json"
                }
            ],
            "description" : "The index of the camera referenced by this node."
        },
        "children" : {
            "type" : "array",
            "description" : "The indices of this node's children.",
            "items" : {
                "$ref" : "glTFid.schema.json"
            },
            "uniqueItems" : true,
            "minItems" : 1
        },
        "skin" : {
            "allOf" : [
                {
                    "$ref" : "glTFid.schema.json"
                }
            ],
            "description" : "The index of the skin referenced by this node. When a skin is referenced by a node within a scene, all joints used by the skin must belong to the same scene.",
            "short_description" : "The index of the skin referenced by this node."
        },
        "matrix" : {
            "type" : "array",
            "description" : "A floating-point 4x4 transformation matrix stored in column-major order.",
            "items" : {
                "type" : "number"
            },
            "minItems" : 16,
            "maxItems" : 16,
            "default" : [
                1,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                1
            ],
            "gltf_webgl" : "`uniformMatrix4fv()` with the transpose parameter equal to false",
            "short_description" : "A floating-point 4x4 transformation matrix stored in column-major order."
        },
        "mesh" : {
            "allOf" : [
                {
                    "$ref" : "glTFid.schema.json"
                }
            ],
            "description" : "The index of the mesh in this node."
        },
        "rotation" : {
            "type" : "array",
            "description" : "The node's unit quaternion rotation in the order (x, y, z, w), where w is the scalar.",
            "items" : {
                "type" : "number",
                "minimum" : -1,
                "maximum" : 1
            },
            "minItems" : 4,
            "maxItems" : 4,
            "default" : [
                0,
                0,
                0,
                1
            ]
        },
        "scale" : {
            "type" : "array",
            "description" : "The node's non-uniform scale, given as the scaling factors along the x, y, and z axes.",
            "items" : {
                "type" : "number"
            },
            "minItems" : 3,
            "maxItems" : 3,
            "default" : [
                1,
                1,
                1
            ]
        },
        "translation" : {
            "type" : "array",
            "description" : "The node's translation along the x, y, and z axes.",
            "items" : {
                "type" : "number"
            },
            "minItems" : 3,
            "maxItems" : 3,
            "default" : [
                0,
                0,
                0
            ]
        },
        "weights" : {
            "type" : "array",
            "description" : "The weights of the instantiated Morph Target. Number of elements must match number of Morph Targets of used mesh.",
            "minItems" : 1,
            "items" : {
                "type" : "number"
            }
        },
        "name" : {},
        "extensions" : {
            "properties" : {
                "KHR_lights_punctual" : {
                    "allOf" : [
                        {
                            "$ref" : "extensions/KHR_lights_punctual/node.KHR_lights_punctual.schema.json"
                        }
                    ]
                },
                "AGI_articulations" : {
                    "allOf" : [
                        {
                            "$ref" : "extensions/AGI_articulations/node.AGI_articulations.schema.json"
                        }
                    ]
                },
                "AGI_stk_metadata" : {
                    "allOf" : [
                        {
                            "$ref" : "extensions/AGI_stk_metadata/node.AGI_stk_metadata.schema.json"
                        }
                    ]
                }
            }
        },
        "extras" : {}
    },
    "dependencies" : {
        "weights" : [
            "mesh"
        ],
        "skin" : [
            "mesh"
        ]
    },
    "not" : {
        "anyOf" : [
            {
                "required" : [
                    "matrix",
                    "translation"
                ]
            },
            {
                "required" : [
                    "matrix",
                    "rotation"
                ]
            },
            {
                "required" : [
                    "matrix",
                    "scale"
                ]
            }
        ]
    }
}
