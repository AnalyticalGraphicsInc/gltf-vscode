{
    "$schema" : "http://json-schema.org/draft-04/schema",
    "title" : "glTF",
    "type" : "object",
    "description" : "The root object for a glTF asset.",
    "allOf" : [
        {
            "$ref" : "glTFProperty.schema.json"
        }
    ],
    "properties" : {
        "extensionsUsed" : {
            "type" : "array",
            "description" : "Names of glTF extensions used somewhere in this asset.",
            "items" : {
                "type" : "string"
            },
            "uniqueItems" : true,
            "minItems" : 1
        },
        "extensionsRequired" : {
            "type" : "array",
            "description" : "Names of glTF extensions required to properly load this asset.",
            "items" : {
                "type" : "string"
            },
            "uniqueItems" : true,
            "minItems" : 1
        },
        "accessors" : {
            "type" : "array",
            "description" : "An array of accessors.  An accessor is a typed view into a bufferView.",
            "items" : {
                "$ref" : "accessor.schema.json"
            },
            "minItems" : 1,
            "short_description" : "An array of accessors."
        },
        "animations" : {
            "type" : "array",
            "description" : "An array of keyframe animations.",
            "items" : {
                "$ref" : "animation.schema.json"
            },
            "minItems" : 1
        },
        "asset" : {
            "allOf" : [
                {
                    "$ref" : "asset.schema.json"
                }
            ],
            "description" : "Metadata about the glTF asset."
        },
        "buffers" : {
            "type" : "array",
            "description" : "An array of buffers.  A buffer points to binary geometry, animation, or skins.",
            "items" : {
                "$ref" : "buffer.schema.json"
            },
            "minItems" : 1,
            "short_description" : "An array of buffers."
        },
        "bufferViews" : {
            "type" : "array",
            "description" : "An array of bufferViews.  A bufferView is a view into a buffer generally representing a subset of the buffer.",
            "items" : {
                "$ref" : "bufferView.schema.json"
            },
            "minItems" : 1,
            "short_description" : "An array of bufferViews."
        },
        "cameras" : {
            "type" : "array",
            "description" : "An array of cameras.  A camera defines a projection matrix.",
            "items" : {
                "$ref" : "camera.schema.json"
            },
            "minItems" : 1,
            "short_description" : "An array of cameras."
        },
        "images" : {
            "type" : "array",
            "description" : "An array of images.  An image defines data used to create a texture.",
            "items" : {
                "$ref" : "image.schema.json"
            },
            "minItems" : 1,
            "short_description" : "An array of images."
        },
        "materials" : {
            "type" : "array",
            "description" : "An array of materials.  A material defines the appearance of a primitive.",
            "items" : {
                "$ref" : "material.schema.json"
            },
            "minItems" : 1,
            "short_description" : "An array of materials."
        },
        "meshes" : {
            "type" : "array",
            "description" : "An array of meshes.  A mesh is a set of primitives to be rendered.",
            "items" : {
                "$ref" : "mesh.schema.json"
            },
            "minItems" : 1,
            "short_description" : "An array of meshes."
        },
        "nodes" : {
            "type" : "array",
            "description" : "An array of nodes.",
            "items" : {
                "$ref" : "node.schema.json"
            },
            "minItems" : 1
        },
        "samplers" : {
            "type" : "array",
            "description" : "An array of samplers.  A sampler contains properties for texture filtering and wrapping modes.",
            "items" : {
                "$ref" : "sampler.schema.json"
            },
            "minItems" : 1,
            "short_description" : "An array of samplers."
        },
        "scene" : {
            "allOf" : [
                {
                    "$ref" : "glTFid.schema.json"
                }
            ],
            "description" : "The index of the default scene."
        },
        "scenes" : {
            "type" : "array",
            "description" : "An array of scenes.",
            "items" : {
                "$ref" : "scene.schema.json"
            },
            "minItems" : 1
        },
        "skins" : {
            "type" : "array",
            "description" : "An array of skins.  A skin is defined by joints and matrices.",
            "items" : {
                "$ref" : "skin.schema.json"
            },
            "minItems" : 1,
            "short_description" : "An array of skins."
        },
        "textures" : {
            "type" : "array",
            "description" : "An array of textures.",
            "items" : {
                "$ref" : "texture.schema.json"
            },
            "minItems" : 1
        },
        "extensions" : {
            "properties" : {
                "KHR_lights_punctual" : {
                    "allOf" : [
                        {
                            "$ref" : "extensions/KHR_lights_punctual/glTF.KHR_lights_punctual.schema.json"
                        }
                    ]
                },
                "KHR_techniques_webgl" : {
                    "allOf" : [
                        {
                            "$ref" : "extensions/KHR_techniques_webgl/glTF.KHR_techniques_webgl.schema.json"
                        }
                    ]
                },
                "EXT_lights_image_based" : {
                    "allOf" : [
                        {
                            "$ref" : "extensions/EXT_lights_image_based/glTF.EXT_lights_image_based.schema.json"
                        }
                    ]
                },
                "AGI_articulations" : {
                    "allOf" : [
                        {
                            "$ref" : "extensions/AGI_articulations/gltf.AGI_articulations.schema.json"
                        }
                    ]
                },
                "AGI_stk_metadata" : {
                    "allOf" : [
                        {
                            "$ref" : "extensions/AGI_stk_metadata/gltf.AGI_stk_metadata.schema.json"
                        }
                    ]
                }
            }
        },
        "extras" : {}
    },
    "dependencies" : {
        "scene" : [
            "scenes"
        ]
    },
    "required" : [
        "asset"
    ]
}
