{
    "$schema" : "http://json-schema.org/draft-04/schema",
    "title" : "functions",
    "type" : "object",
    "description" : "Arguments for fixed-function rendering state functions other than `enable()`/`disable()`.",
    "allOf" : [
        {
            "$ref" : "glTFProperty.schema.json"
        }
    ],
    "properties" : {
        "extensions" : {},
        "extras" : {},
        "blendColor" : {
            "type" : "array",
            "description" : "Floating-point values passed to `blendColor()`. [red, green, blue, alpha]",
            "items" : {
                "type" : "number"
            },
            "minItems" : 4,
            "maxItems" : 4,
            "default" : [
                0,
                0,
                0,
                0
            ],
            "gltf_webgl" : "`blendColor()`"
        },
        "blendEquationSeparate" : {
            "type" : "array",
            "description" : "Integer values passed to `blendEquationSeparate()`. [rgb, alpha]. All valid values correspond to WebGL enums.",
            "items" : {
                "oneOf" : [
                    {
                        "enum" : [
                            32774
                        ],
                        "description" : "FUNC_ADD"
                    },
                    {
                        "enum" : [
                            32778
                        ],
                        "description" : "FUNC_SUBTRACT"
                    },
                    {
                        "enum" : [
                            32779
                        ],
                        "description" : "FUNC_REVERSE_SUBTRACT"
                    }
                ]
            },
            "minItems" : 2,
            "maxItems" : 2,
            "default" : [
                32774,
                32774
            ],
            "gltf_webgl" : "`blendEquationSeparate()`",
            "short_description" : "Integer values passed to `blendEquationSeparate()`."
        },
        "blendFuncSeparate" : {
            "type" : "array",
            "description" : "Integer values passed to `blendFuncSeparate()`. [srcRGB, dstRGB, srcAlpha, dstAlpha]. All valid values correspond to WebGL enums.",
            "items" : {
                "oneOf" : [
                    {
                        "enum" : [
                            0
                        ],
                        "description" : "ZERO"
                    },
                    {
                        "enum" : [
                            1
                        ],
                        "description" : "ONE"
                    },
                    {
                        "enum" : [
                            768
                        ],
                        "description" : "SRC_COLOR"
                    },
                    {
                        "enum" : [
                            769
                        ],
                        "description" : "ONE_MINUS_SRC_COLOR"
                    },
                    {
                        "enum" : [
                            774
                        ],
                        "description" : "DST_COLOR"
                    },
                    {
                        "enum" : [
                            775
                        ],
                        "description" : "ONE_MINUS_DST_COLOR"
                    },
                    {
                        "enum" : [
                            770
                        ],
                        "description" : "SRC_ALPHA"
                    },
                    {
                        "enum" : [
                            771
                        ],
                        "description" : "ONE_MINUS_SRC_ALPHA"
                    },
                    {
                        "enum" : [
                            772
                        ],
                        "description" : "DST_ALPHA"
                    },
                    {
                        "enum" : [
                            773
                        ],
                        "description" : "ONE_MINUS_DST_ALPHA"
                    },
                    {
                        "enum" : [
                            32769
                        ],
                        "description" : "CONSTANT_COLOR"
                    },
                    {
                        "enum" : [
                            32770
                        ],
                        "description" : "ONE_MINUS_CONSTANT_COLOR"
                    },
                    {
                        "enum" : [
                            32771
                        ],
                        "description" : "CONSTANT_ALPHA"
                    },
                    {
                        "enum" : [
                            32772
                        ],
                        "description" : "ONE_MINUS_CONSTANT_ALPHA"
                    },
                    {
                        "enum" : [
                            776
                        ],
                        "description" : "SRC_ALPHA_SATURATE"
                    }
                ]
            },
            "minItems" : 4,
            "maxItems" : 4,
            "default" : [
                1,
                0,
                1,
                0
            ],
            "gltf_webgl" : "`blendFuncSeparate()`",
            "short_description" : "Integer values passed to `blendFuncSeparate()`."
        },
        "colorMask" : {
            "type" : "array",
            "description" : "Boolean values passed to `colorMask()`. [red, green, blue, alpha].",
            "items" : {
                "type" : "boolean"
            },
            "minItems" : 4,
            "maxItems" : 4,
            "default" : [
                true,
                true,
                true,
                true
            ],
            "gltf_webgl" : "`colorMask()`"
        },
        "cullFace" : {
            "type" : "array",
            "description" : "Integer value passed to `cullFace()`. All valid values correspond to WebGL enums.",
            "items" : {
                "oneOf" : [
                    {
                        "enum" : [
                            1028
                        ],
                        "description" : "FRONT"
                    },
                    {
                        "enum" : [
                            1029
                        ],
                        "description" : "BACK"
                    },
                    {
                        "enum" : [
                            1032
                        ],
                        "description" : "FRONT_AND_BACK"
                    }
                ]
            },
            "minItems" : 1,
            "maxItems" : 1,
            "default" : [
                1029
            ],
            "gltf_webgl" : "`cullFace()`",
            "short_description" : "Integer value passed to `cullFace()`."
        },
        "depthFunc" : {
            "type" : "array",
            "description" : "Integer values passed to `depthFunc()`. All valid values correspond to WebGL enums.",
            "items" : {
                "oneOf" : [
                    {
                        "enum" : [
                            512
                        ],
                        "description" : "NEVER"
                    },
                    {
                        "enum" : [
                            513
                        ],
                        "description" : "LESS"
                    },
                    {
                        "enum" : [
                            515
                        ],
                        "description" : "LEQUAL"
                    },
                    {
                        "enum" : [
                            514
                        ],
                        "description" : "EQUAL"
                    },
                    {
                        "enum" : [
                            516
                        ],
                        "description" : "GREATER"
                    },
                    {
                        "enum" : [
                            517
                        ],
                        "description" : "NOTEQUAL"
                    },
                    {
                        "enum" : [
                            518
                        ],
                        "description" : "GEQUAL"
                    },
                    {
                        "enum" : [
                            519
                        ],
                        "description" : "ALWAYS"
                    }
                ]
            },
            "minItems" : 1,
            "maxItems" : 1,
            "default" : [
                513
            ],
            "gltf_webgl" : "`depthFunc()`",
            "short_description" : "Integer values passed to `depthFunc()`."
        },
        "depthMask" : {
            "type" : "array",
            "description" : "Boolean value passed to `depthMask()`.",
            "items" : {
                "type" : "boolean"
            },
            "minItems" : 1,
            "maxItems" : 1,
            "default" : [
                true
            ],
            "gltf_webgl" : "`depthMask()`"
        },
        "depthRange" : {
            "type" : "array",
            "description" : "Floating-point values passed to `depthRange()`. [zNear, zFar]",
            "items" : {
                "type" : "number"
            },
            "minItems" : 2,
            "maxItems" : 2,
            "default" : [
                0,
                1
            ],
            "gltf_webgl" : "`depthRange()`"
        },
        "frontFace" : {
            "type" : "array",
            "description" : "Integer value passed to `frontFace()`.  All valid values correspond to WebGL enums.",
            "items" : {
                "oneOf" : [
                    {
                        "enum" : [
                            2304
                        ],
                        "description" : "CW"
                    },
                    {
                        "enum" : [
                            2305
                        ],
                        "description" : "CCW"
                    }
                ]
            },
            "minItems" : 1,
            "maxItems" : 1,
            "default" : [
                2305
            ],
            "gltf_webgl" : "`frontFace()`",
            "short_description" : "Integer value passed to `frontFace()`."
        },
        "lineWidth" : {
            "type" : "array",
            "description" : "Floating-point value passed to `lineWidth()`.",
            "items" : {
                "type" : "number",
                "minimum" : 0,
                "exclusiveMinimum" : true
            },
            "minItems" : 1,
            "maxItems" : 1,
            "default" : [
                1
            ],
            "gltf_webgl" : "`lineWidth()`"
        },
        "polygonOffset" : {
            "type" : "array",
            "description" : "Floating-point value passed to `polygonOffset()`.  [factor, units]",
            "items" : {
                "type" : "number"
            },
            "minItems" : 2,
            "maxItems" : 2,
            "default" : [
                0,
                0
            ],
            "gltf_webgl" : "`polygonOffset()`"
        },
        "scissor" : {
            "type" : "array",
            "description" : "Floating-point value passed to `scissor()`.  [x, y, width, height].  The default is the dimensions of the canvas when the WebGL context is created.  width and height must be greater than zero.",
            "items" : {
                "type" : "number"
            },
            "minItems" : 4,
            "maxItems" : 4,
            "default" : [
                0,
                0,
                0,
                0
            ],
            "gltf_webgl" : "`scissor()`",
            "short_description" : "Floating-point value passed to `scissor()`.  [x, y, width, height]."
        }
    },
    "additionalProperties" : false
}
